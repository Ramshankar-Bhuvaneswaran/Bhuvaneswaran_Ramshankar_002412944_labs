/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import business.account;
import business.accountdirectory;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ram
 */
public class ManagePanel extends javax.swing.JPanel {

    /**
     * Creates new form ManagePanel
     */
       private accountdirectory accDirect; 
       private JPanel cardlayout;
    public ManagePanel(JPanel cardlayout, accountdirectory accDirect) {
        
        initComponents();
        this.cardlayout= cardlayout;
    this.accDirect = accDirect;
    populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        BtnSearch = new javax.swing.JButton();
        SearchT = new javax.swing.JTextField();
        BtnDelete = new javax.swing.JButton();
        BtnView = new javax.swing.JButton();
        BtnBack = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Bank Name", "Routing Number", "Account Number", "Balance"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jTable1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        BtnSearch.setBackground(new java.awt.Color(204, 255, 204));
        BtnSearch.setText("Search by Account Number");
        BtnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnSearchActionPerformed(evt);
            }
        });

        BtnDelete.setBackground(new java.awt.Color(255, 204, 204));
        BtnDelete.setText("Delete Account");
        BtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnDeleteActionPerformed(evt);
            }
        });

        BtnView.setBackground(new java.awt.Color(204, 255, 204));
        BtnView.setText("View Detail");
        BtnView.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnViewActionPerformed(evt);
            }
        });

        BtnBack.setBackground(new java.awt.Color(255, 153, 153));
        BtnBack.setText("<<Back");
        BtnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BtnBack)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(SearchT, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BtnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(BtnDelete)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(BtnView))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(87, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(BtnBack)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BtnDelete)
                    .addComponent(BtnView))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BtnSearch))
                .addContainerGap(88, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BtnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnBackActionPerformed
        cardlayout.remove(this);  
        CardLayout layout = (CardLayout) cardlayout.getLayout();
        layout.previous(cardlayout);        // TODO add your handling code here:
    }//GEN-LAST:event_BtnBackActionPerformed

    private void BtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnDeleteActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex=jTable1.getSelectedRow();
        if (selectedRowIndex>=0){
            int DialogB=  JOptionPane.YES_NO_OPTION;
            int dialogResult= JOptionPane.showConfirmDialog(null, "Do you like to delete the details?","Warning",DialogB);
            if (dialogResult== JOptionPane.YES_OPTION){
        account accountdirectory= (account) jTable1.getValueAt(selectedRowIndex, 0);
        
        accDirect.deleteaccount(accountdirectory);
        
        populateTable();}
        }else{
            JOptionPane.showMessageDialog(null,"Please select row", "Warning", JOptionPane.WARNING_MESSAGE);
          

        }
        
    }//GEN-LAST:event_BtnDeleteActionPerformed

    private void BtnViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnViewActionPerformed
        // TODO add your handling code here:
           int selectedRowIndex=jTable1.getSelectedRow();
        if (selectedRowIndex<0){
            JOptionPane.showMessageDialog(null,"Please select row", "Warning", JOptionPane.WARNING_MESSAGE);            
        }
        else{
            account accountdirectory= (account) jTable1.getValueAt(selectedRowIndex, 0);
            ViewPanel pan= new ViewPanel(cardlayout, accountdirectory);
            cardlayout.add("ViewPanel",pan);
            CardLayout layout = (CardLayout) cardlayout.getLayout();
            layout.next(cardlayout);
        
            
        }
    }//GEN-LAST:event_BtnViewActionPerformed

    private void BtnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnSearchActionPerformed
            //Validation Needed Here
            account result= accDirect.searchaccount(SearchT.getText());
            if (result == null){
               JOptionPane.showMessageDialog(null,"Account Number doesn't exist", "Information", JOptionPane.INFORMATION_MESSAGE);            

            }   
            else{
                ViewPanel pan= new ViewPanel(cardlayout, result);
            cardlayout.add("ViewPanel",pan);
            CardLayout layout = (CardLayout) cardlayout.getLayout();
            layout.next(cardlayout);
            }
    }//GEN-LAST:event_BtnSearchActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnBack;
    private javax.swing.JButton BtnDelete;
    private javax.swing.JButton BtnSearch;
    private javax.swing.JButton BtnView;
    private javax.swing.JTextField SearchT;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void populateTable() {
         DefaultTableModel model=  (DefaultTableModel) jTable1.getModel();
         model.setRowCount(0);
         
         for (account accountdirectory : accDirect.getAccountlist()){
             Object[] row= new Object[4];
             row[0]=accountdirectory;
             row[1]=accountdirectory.getRoutnumber();
             row[2]=accountdirectory.getAccnumber();
             row[3]=accountdirectory.getBal();
             model.addRow(row);  
    }
}
    
}